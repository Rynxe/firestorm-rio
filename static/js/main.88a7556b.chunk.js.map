{"version":3,"sources":["utils.js","App.js","index.js"],"names":["returnPlayerRuns","rids","currentRuns","runs","i","length","j","rid","push","idToDungeon","id","dungeons","parseInt","slice","name","PlayerAccordion","player","useState","isActive","setIsActive","className","onClick","fsio","bruns","map","playerRun","index","PlayerRunsAcc","seconds","Date","toISOString","substr","App","searchTerm","setSearchTerm","lastupdated","players_json","href","type","placeholder","onChange","event","target","value","filter","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6xxuCAIA,SAASA,EAAiBC,EAAMC,GAG9B,IAFA,IAAIC,EAAO,GAEFC,EAAI,EAAGA,EAAIH,EAAKI,OAAQD,IAC/B,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAAYG,OAAQC,IAClCL,EAAKG,KAAOF,EAAYI,GAAGC,KAC7BJ,EAAKK,KAAKN,EAAYI,IAI5B,OAAOH,EAGT,SAASM,EAAYC,GACnB,IAAK,IAAIN,EAAI,EAAGA,EAAIO,EAASN,OAAQD,IACnC,GAAIM,IAAOE,SAASD,EAASP,GAAT,GAAkBS,MAAMF,EAASP,GAAT,GAAkBC,OAAS,IACrE,OAAOM,EAASP,GAAGU,KAUzB,IAAMC,EAAkB,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQd,EAAkB,EAAlBA,YACjC,EAAgCe,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,kBAAkBC,QAAS,kBAAMF,GAAaD,IAA7D,SACE,gCAAMF,EAAOF,KAAb,YAA4BE,EAAOM,UAGpCJ,GAAY,sBAAKE,UAAU,oBAAf,cAAqCpB,EAAiBgB,EAAOO,MAAOrB,GAAasB,KAAI,SAACC,EAAWC,GAC5G,OAAQ,cAAC,EAAD,CAAeD,UAAWA,OADvB,WAQbE,EAAgB,SAAC,GAAmB,IArBpBC,EAqBGH,EAAgB,EAAhBA,UACvB,EAAgCR,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,OACE,sBAAKC,UAAU,qBAAf,UACE,qBAAKA,UAAU,sBAAsBC,QAAS,kBAAMF,GAAaD,IAAjE,SACE,4CAAeT,EAAYgB,EAAS,MAApC,UAAsDA,EAAS,IAA/D,YA3BcG,EA2B+EH,EAAS,KA1BrG,IAAII,KAAe,IAAVD,GAAgBE,cAAcC,OAAO,GAAI,IA0BnD,YAA0HN,EAAS,WAGpIP,GAAY,sBAAKE,UAAU,wBAAf,cAAyCK,EAAS,OAAW,GAA7D,KAAmEA,EAAS,OAAW,GAAvF,KAA6FA,EAAS,OAAW,GAAjH,KAAuHA,EAAS,OAAW,GAA3I,KAAiJA,EAAS,OAAW,U,OCjBzKO,MAhCf,WACE,MAAoCf,mBAAS,IAA7C,mBAAOgB,EAAP,KAAmBC,EAAnB,KAEA,OACE,sBAAKd,UAAU,MAAf,UACE,qBAAKA,UAAU,aAAf,mCACA,yEAA4Ce,KAC5C,gDAAmBC,EAAa/B,OAAhC,iBAAsDH,EAAYG,UAClE,yCAAW,mBAAGgC,KAAK,6CAAR,2DAEX,uBACCC,KAAK,OACLC,YAAY,oBACZC,SAAU,SAACC,GAAWP,EAAcO,EAAMC,OAAOC,UAGjDP,EAAaQ,QAAO,SAAC5B,GACpB,MAAmB,KAAfiB,GAEOjB,EAAOF,KAAK+B,cAAcC,SAASb,EAAWY,eADhD7B,OACF,KAKLQ,KAAI,SAACR,EAAQU,GACf,OAAQ,cAAC,EAAD,CAAiBV,OAAQA,EAAQd,YAAaA,WC3B9D6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.88a7556b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport dungeons from './dungeons.json';\n\n\nfunction returnPlayerRuns(rids, currentRuns){\n  let runs = [];\n\n  for (let i = 0; i < rids.length; i++) {\n    for (let j = 0; j < currentRuns.length; j++) {\n      if (rids[i] === currentRuns[j].rid) {\n        runs.push(currentRuns[j])\n      }\n    }\n  }\n  return runs\n};\n\nfunction idToDungeon(id){\n  for (let i = 0; i < dungeons.length; i++){\n    if (id === parseInt(dungeons[i][\"id\"].slice(dungeons[i][\"id\"].length - 3))){\n      return dungeons[i].name\n    }\n  }\n  return undefined\n}\n\nfunction secondsToHMS(seconds){\n  return new Date(seconds * 1000).toISOString().substr(11, 8);\n}\n\nconst PlayerAccordion = ({ player, currentRuns }) => {\n  const [isActive, setIsActive] = useState(false);\n  //let playerRuns = returnPlayerRuns(player.bruns, currentRuns);\n  return (\n    <div className=\"accordion-item\">\n      <div className=\"accordion-title\" onClick={() => setIsActive(!isActive)}>\n        <div>{player.name}, Score: {player.fsio}</div>\n        {/* <div>{isActive ? '-' : '+'}</div> */}\n      </div>\n      {isActive && <div className=\"accordion-content\"> {returnPlayerRuns(player.bruns, currentRuns).map((playerRun, index) => {\n        return (<PlayerRunsAcc playerRun={playerRun}/>)}\n    )} </div>}\n    </div>\n  );\n};\n\n\nconst PlayerRunsAcc = ({ playerRun }) => {\n  const [isActive, setIsActive] = useState(false);\n\n  return (\n    <div className=\"accordion-alt-item\">\n      <div className=\"accordion-alt-title\" onClick={() => setIsActive(!isActive)}>\n        <div>Dungeon: {idToDungeon(playerRun[\"dung\"])}, Lvl: {playerRun[\"lvl\"]}, Time: {secondsToHMS(playerRun[\"time\"])}, Score: {playerRun[\"score\"]}</div>\n        {/* <div>{isActive ? '-' : '+'}</div> */}\n      </div>\n      {isActive && <div className=\"accordion-alt-content\"> {playerRun[\"pnames\"][0]}, {playerRun[\"pnames\"][1]}, {playerRun[\"pnames\"][2]}, {playerRun[\"pnames\"][3]}, {playerRun[\"pnames\"][4]}</div>}\n    </div>\n  );\n};\n\nexport {PlayerAccordion};","import './App.css';\nimport players_json from './players.json'\nimport currentRuns from './runs.json'\nimport {useState} from 'react'\nimport {PlayerAccordion} from './utils';\nimport lastupdated from './lastUpdated.json'\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  return (\n    <div className=\"App\">\n      <div className=\"app-header\">Firestorm RIO (Beta!)</div>\n      <p>Made by keepdying#5821. Last updated on {lastupdated}</p>\n      <p>Total Players: {players_json.length}, Total Runs: {currentRuns.length}</p>\n      <p> F.A.Q: <a href=\"https://github.com/keepdying/firestorm-rio\">https://github.com/keepdying/firestorm-rio</a></p>\n\n      <input\n       type=\"text\" \n       placeholder=\"Search by name...\" \n       onChange={(event) => {setSearchTerm(event.target.value);}}\n      />\n\n      {players_json.filter((player) => {\n        if (searchTerm === '') {\n          return player\n        } else if (player.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n          return player\n        }\n        return undefined\n\n      } ).map((player, index) => {\n        return (<PlayerAccordion player={player} currentRuns={currentRuns}/>)}\n    )}\n    </div>\n  );}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}